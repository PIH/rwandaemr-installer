  - name: Getting timestamp
    shell: date +'%Y%m%d%H%M%S'
    register: timestamp_raw

  - name: Getting name for backup
    set_fact: date={{ timestamp_raw.stdout }}


  - name: Create backup directory
    file: dest={{ssl_certs_folder}}/ssl_backup state=directory owner=root

  - name: stat certs
    stat: path={{ssl_certs_folder}}/certs
    register: cert_stat

  - name: Move certs to ssl_backup
    command: mv {{ssl_certs_folder}}/certs {{ssl_certs_folder}}/ssl_backup-{{ date }}
    when: cert_stat.stat.exists

  - name: stat private
    stat: path={{ssl_certs_folder}}/private
    register: private_stat

  - name: Move private to ssl_backup
    command: mv {{ssl_certs_folder}}/private {{ssl_certs_folder}}/ssl_backup-{{ date }}
    when: private_stat.stat.exists

  - name: stat openssl.cnf
    stat: path={{ssl_certs_folder}}/openssl.cnf
    register: openssl_cnf_stat
    ignore_errors: true

  - name: Move openssl.cnf to ssl_backup
    command: mv {{ssl_certs_folder}}/openssl.cnf {{ssl_certs_folder}}/ssl_backup-{{ date }}
    when: cert_stat.stat.exists
    ignore_errors: true
